{"version":3,"file":"static/js/8.4448de70.chunk.js","mappings":"wPAYcA,EAAc,WACzB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAaF,EAAAA,EAAAA,IAAYG,EAAAA,IACzBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQN,EAAAA,EAAAA,IAAYO,EAAAA,IAapBC,EAXiB,WACrB,GAAIN,EAAY,CACd,IAAMO,EAAYP,EAAWQ,cAAcC,OAC3C,OAAOZ,EAAMa,QAAO,qBAAGC,KAChBH,cAAcI,SAASL,EADV,GAGrB,CACC,OAAOV,CAEV,CAEwBgB,GAEzB,OACE,iCACE,yBAAMT,IAAS,uBAAIA,OACnB,eAAIU,UAAWC,EAAAA,EAAAA,MAAf,SAEKT,EAAiBU,KAAI,YAA0B,IAAvBL,EAAsB,EAAtBA,KAAMM,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,GAAS,OAC9C,gBAAIJ,UAAWC,EAAAA,EAAAA,KAAf,WACE,kBAAMI,MAAO,CAAEC,MAAO,KAAtB,UAA8BT,EAA9B,SACA,0BAAOM,KAEP,mBACEH,UAAWC,EAAAA,EAAAA,UACXM,KAAK,SACLC,QAAS,kBAAMpB,GAASqB,EAAAA,EAAAA,IAAcL,GAA7B,EAHX,UAKE,SAAC,MAAD,CAAeM,KAAM,SATGN,EAY3B,QAKZ,E,SCRF,EA9BqB,WACnB,IAAMhB,GAAWC,EAAAA,EAAAA,MACXsB,GAAY3B,EAAAA,EAAAA,IAAY4B,EAAAA,IACzBtB,GAAQN,EAAAA,EAAAA,IAAYO,EAAAA,IACnBsB,GAAW7B,EAAAA,EAAAA,IAAYC,EAAAA,IAO7B,OAJA6B,EAAAA,EAAAA,YAAU,WACR1B,GAAS2B,EAAAA,EAAAA,MACV,GAAE,CAAC3B,KAGF,iBAAKY,UAAWC,EAAAA,EAAAA,UAAhB,UACGU,IAAcrB,IAAS,SAAC0B,EAAA,EAAD,KAExB,eAAIhB,UAAWC,EAAAA,EAAAA,MAAf,wBACA,SAACgB,EAAA,EAAD,KAEA,eAAIjB,UAAWC,EAAAA,EAAAA,MAAf,sBAECY,EAASK,OAAS,IAAK,SAACC,EAAA,EAAD,IAEH,IAApBN,EAASK,QACR,qEAEA,SAACpC,EAAD,MAIP,C","sources":["components/ContactList/ContactList.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { FaRegTrashAlt } from 'react-icons/fa';\n\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n} from 'redux/contacts/selectors';\nimport { deleteContact} from 'redux/contacts/operations';\n\nimport s from '../App.module.css';\n\n export const ContactList = () => {\n   const items = useSelector(selectContacts);\n   const filterName = useSelector(selectFilter);\n   const dispatch = useDispatch();\n\n   const error = useSelector(selectError);\n\n   const filterContacts = () => {\n     if (filterName) {\n       const filterLow = filterName.toLowerCase().trim();\n       return items.filter(({ name }) =>\n         name.toLowerCase().includes(filterLow)\n       );\n     } else {\n       return items;\n     }\n   };\n\n   const filteredContacts = filterContacts();\n\n   return (\n     <>\n       <div>{error && <b>{error}</b>}</div>\n       <ul className={s.items}>\n\t\t\t\t\n           {filteredContacts.map(({ name, number, id }) =>{return (\n             <li className={s.item} key={id}>\n               <span style={{ width: 200 }}>{name}: </span>\n               <span>{number}</span>\n\n               <button\n                 className={s.buttonDel}\n                 type=\"button\"\n                 onClick={() => dispatch(deleteContact(id))}\n               >\n                 <FaRegTrashAlt size={20} />\n               </button>\n             </li>\n           );})}\n         \n       </ul>\n     </>\n   );\n };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n} from 'redux/contacts/selectors';\n\nimport s from 'components/App.module.css';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\tconst error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\t\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={s.conteiner}>\n      {isLoading && !error && <Loader />}\n\n      <h2 className={s.title}>Phonebook</h2>\n      <ContactForm />\n\n      <h2 className={s.title}>Contacts</h2>\n\n      {contacts.length > 0 && <Filter />}\n\n      {contacts.length === 0 ? (\n        <p>There is no one in the contact list yet!</p>\n      ) : (\n        <ContactList />\n      )}\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["ContactList","items","useSelector","selectContacts","filterName","selectFilter","dispatch","useDispatch","error","selectError","filteredContacts","filterLow","toLowerCase","trim","filter","name","includes","filterContacts","className","s","map","number","id","style","width","type","onClick","deleteContact","size","isLoading","selectIsLoading","contacts","useEffect","fetchContacts","Loader","ContactForm","length","Filter"],"sourceRoot":""}